# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

try:
    # for grpc server
    import proto.sgd_pb2 as sgd__pb2
except ModuleNotFoundError:
    # for django
    import sgd_grpc.proto.sgd_pb2 as sgd__pb2


class SGDStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Notifications = channel.unary_stream(
                '/sgd_grpc.SGD/Notifications',
                request_serializer=sgd__pb2.NotificationRequest.SerializeToString,
                response_deserializer=sgd__pb2.NotificationResponse.FromString,
                )
        self.SendNotification = channel.unary_unary(
                '/sgd_grpc.SGD/SendNotification',
                request_serializer=sgd__pb2.SendNotificationRequest.SerializeToString,
                response_deserializer=sgd__pb2.OkResponse.FromString,
                )
        self.Bot = channel.unary_unary(
                '/sgd_grpc.SGD/Bot',
                request_serializer=sgd__pb2.BotRequest.SerializeToString,
                response_deserializer=sgd__pb2.BotResponse.FromString,
                )


class SGDServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Notifications(self, request, context):
        """Notifications subscription
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendNotification(self, request, context):
        """Notifications sender
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Bot(self, request, context):
        """Chatbot
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SGDServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Notifications': grpc.unary_stream_rpc_method_handler(
                    servicer.Notifications,
                    request_deserializer=sgd__pb2.NotificationRequest.FromString,
                    response_serializer=sgd__pb2.NotificationResponse.SerializeToString,
            ),
            'SendNotification': grpc.unary_unary_rpc_method_handler(
                    servicer.SendNotification,
                    request_deserializer=sgd__pb2.SendNotificationRequest.FromString,
                    response_serializer=sgd__pb2.OkResponse.SerializeToString,
            ),
            'Bot': grpc.unary_unary_rpc_method_handler(
                    servicer.Bot,
                    request_deserializer=sgd__pb2.BotRequest.FromString,
                    response_serializer=sgd__pb2.BotResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'sgd_grpc.SGD', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SGD(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Notifications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/sgd_grpc.SGD/Notifications',
            sgd__pb2.NotificationRequest.SerializeToString,
            sgd__pb2.NotificationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendNotification(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sgd_grpc.SGD/SendNotification',
            sgd__pb2.SendNotificationRequest.SerializeToString,
            sgd__pb2.OkResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Bot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/sgd_grpc.SGD/Bot',
            sgd__pb2.BotRequest.SerializeToString,
            sgd__pb2.BotResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
