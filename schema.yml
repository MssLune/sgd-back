openapi: 3.0.3
info:
  title: SGD API
  version: 1.0.0
  description: SGD OpenAPI documentation
paths:
  /schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - es
      tags:
      - schema
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /v1/auth/login/:
    post:
      operationId: v1_auth_login_create
      description: |-
        Ovewrite the `TokenObtainPairView.post` method for add user information

        to response and update user last_login.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /v1/auth/refresh/:
    post:
      operationId: v1_auth_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /v1/auth/verify/:
    post:
      operationId: v1_auth_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /v1/califications/:
    get:
      operationId: v1_califications_list
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCalificationList'
          description: ''
    post:
      operationId: v1_califications_create
      description: ''
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Calification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Calification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Calification'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calification'
          description: ''
  /v1/califications/{id}/:
    get:
      operationId: v1_califications_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Calificaci贸n.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calification'
          description: ''
    put:
      operationId: v1_califications_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Calificaci贸n.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Calification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Calification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Calification'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calification'
          description: ''
    patch:
      operationId: v1_califications_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Calificaci贸n.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCalification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCalification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCalification'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calification'
          description: ''
    delete:
      operationId: v1_califications_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Calificaci贸n.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/scheduled_services/:
    get:
      operationId: v1_scheduled_services_list
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          title: Estado
          enum:
          - CA
          - CO
          - PE
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedScheduledServiceListClientList'
          description: ''
    post:
      operationId: v1_scheduled_services_create
      description: ''
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledServiceListClient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScheduledServiceListClient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScheduledServiceListClient'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledServiceListClient'
          description: ''
  /v1/scheduled_services/{id}/:
    get:
      operationId: v1_scheduled_services_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Servicio Agendado.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledServiceListClient'
          description: ''
    put:
      operationId: v1_scheduled_services_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Servicio Agendado.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledServiceListClient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScheduledServiceListClient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScheduledServiceListClient'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledServiceListClient'
          description: ''
    patch:
      operationId: v1_scheduled_services_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Servicio Agendado.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedScheduledServiceListClient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedScheduledServiceListClient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedScheduledServiceListClient'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledServiceListClient'
          description: ''
    delete:
      operationId: v1_scheduled_services_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Servicio Agendado.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/services/:
    get:
      operationId: v1_services_list
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedServiceList'
          description: ''
    post:
      operationId: v1_services_create
      description: ''
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Service'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Service'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
  /v1/services/{id}/:
    get:
      operationId: v1_services_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Servicio.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
    put:
      operationId: v1_services_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Servicio.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Service'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Service'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
    patch:
      operationId: v1_services_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Servicio.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedService'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedService'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedService'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
          description: ''
    delete:
      operationId: v1_services_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Servicio.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/users/:
    get:
      operationId: v1_users_list
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserListList'
          description: ''
    post:
      operationId: v1_users_create
      description: ''
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserList'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
  /v1/users/{id}/:
    get:
      operationId: v1_users_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    put:
      operationId: v1_users_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserList'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    patch:
      operationId: v1_users_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserList'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
          description: ''
    delete:
      operationId: v1_users_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /v1/users/client/:
    post:
      operationId: v1_users_client_create
      description: ''
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Client'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Client'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
          description: ''
components:
  schemas:
    Calification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        score:
          type: integer
          maximum: 5
          minimum: 0
        comment:
          type: string
          maxLength: 255
        register_date:
          type: string
          format: date-time
          readOnly: true
        update_date:
          type: string
          format: date-time
          readOnly: true
        scheduled_service:
          type: integer
      required:
      - id
      - register_date
      - scheduled_service
      - score
      - update_date
    Client:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        gender:
          $ref: '#/components/schemas/GenderEnum'
        phone:
          type: string
          title: Tel茅fono
          maxLength: 9
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
          title: Contrase帽a
          maxLength: 128
      required:
      - email
      - first_name
      - gender
      - id
      - last_name
      - password
      - phone
    GenderEnum:
      enum:
      - M
      - F
      type: string
    PaginatedCalificationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Calification'
    PaginatedScheduledServiceListClientList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ScheduledServiceListClient'
    PaginatedServiceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Service'
    PaginatedUserListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserList'
    PatchedCalification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        score:
          type: integer
          maximum: 5
          minimum: 0
        comment:
          type: string
          maxLength: 255
        register_date:
          type: string
          format: date-time
          readOnly: true
        update_date:
          type: string
          format: date-time
          readOnly: true
        scheduled_service:
          type: integer
    PatchedScheduledServiceListClient:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        service:
          $ref: '#/components/schemas/_Service'
        technician:
          $ref: '#/components/schemas/_User'
        date:
          type: string
          format: date
          title: Fecha
        time:
          type: string
          format: time
          title: Hora
        gradable:
          type: boolean
          readOnly: true
    PatchedService:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nombre
          maxLength: 50
        description:
          type: string
          title: Descripci贸n
          maxLength: 512
        image:
          type: string
          format: uri
          title: Imagen
    PatchedUserList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          title: Nombre
          maxLength: 150
        last_name:
          type: string
          title: Apellidos
          maxLength: 150
        email:
          type: string
          format: email
          title: Direcci贸n de correo electr贸nico
          maxLength: 254
        phone:
          type: string
          title: Tel茅fono
          maxLength: 9
        photo:
          type: string
          format: uri
          title: Foto
    ScheduledServiceListClient:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        service:
          $ref: '#/components/schemas/_Service'
        technician:
          $ref: '#/components/schemas/_User'
        date:
          type: string
          format: date
          title: Fecha
        time:
          type: string
          format: time
          title: Hora
        gradable:
          type: boolean
          readOnly: true
      required:
      - date
      - gradable
      - id
      - service
      - technician
      - time
    Service:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nombre
          maxLength: 50
        description:
          type: string
          title: Descripci贸n
          maxLength: 512
        image:
          type: string
          format: uri
          title: Imagen
      required:
      - id
      - image
      - name
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    UserList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          title: Nombre
          maxLength: 150
        last_name:
          type: string
          title: Apellidos
          maxLength: 150
        email:
          type: string
          format: email
          title: Direcci贸n de correo electr贸nico
          maxLength: 254
        phone:
          type: string
          title: Tel茅fono
          maxLength: 9
        photo:
          type: string
          format: uri
          title: Foto
      required:
      - id
      - phone
    _Service:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Nombre
          maxLength: 50
      required:
      - id
      - name
    _User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          title: Nombre
          maxLength: 150
        last_name:
          type: string
          title: Apellidos
          maxLength: 150
        phone:
          type: string
          title: Tel茅fono
          maxLength: 9
      required:
      - id
      - phone
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: Session
